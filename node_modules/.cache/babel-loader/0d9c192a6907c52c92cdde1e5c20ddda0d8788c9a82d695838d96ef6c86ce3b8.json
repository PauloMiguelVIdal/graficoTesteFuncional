{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulo\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\projeto teste gr\\xE1fico\\\\projeto-grafico-teste\\\\src\\\\GenericsDate.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, use, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenericDates = /*#__PURE__*/createContext();\nconst GenericDatesProvider = ({\n  children\n}) => {\n  _s();\n  const [dados, setDates] = useState({\n    1: {\n      terrenos: 1000,\n      lojasP: 2000,\n      lojasM: 3000,\n      lojasG: 4000\n    },\n    2: {\n      terrenos: 1100,\n      lojasP: 2030,\n      lojasM: 3200,\n      lojasG: 4400\n    },\n    3: {\n      terrenos: 1300,\n      lojasP: 2400,\n      lojasM: 3040,\n      lojasG: 4050\n    }\n  });\n  const atualizarDados = (chave, novoValor) => {\n    setDates(prevState => ({\n      ...prevState,\n      [chave]: novoValor\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(GenericDates.Provider, {\n    value: {\n      dados,\n      atualizarDados\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(GenericDatesProvider, \"KmgppQJpNOIac9MNg5SFnxM2WuU=\");\n_c = GenericDatesProvider;\nvar _c;\n$RefreshReg$(_c, \"GenericDatesProvider\");","map":{"version":3,"names":["React","createContext","use","useContext","useState","jsxDEV","_jsxDEV","GenericDates","GenericDatesProvider","children","_s","dados","setDates","terrenos","lojasP","lojasM","lojasG","atualizarDados","chave","novoValor","prevState","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/paulo/OneDrive/Área de Trabalho/projeto teste gráfico/projeto-grafico-teste/src/GenericsDate.js"],"sourcesContent":["import React, { createContext, use, useContext, useState } from \"react\";\r\n\r\nconst GenericDates = createContext()\r\n\r\n\r\nconst GenericDatesProvider = ({ children }) => {\r\n    const [dados, setDates] = useState({\r\n        1: {\r\n            terrenos: 1000,\r\n            lojasP: 2000,\r\n            lojasM: 3000,\r\n            lojasG: 4000\r\n        },\r\n        2: {\r\n            terrenos: 1100,\r\n            lojasP: 2030,\r\n            lojasM: 3200,\r\n            lojasG: 4400\r\n        },\r\n        3: {\r\n            terrenos: 1300,\r\n            lojasP: 2400,\r\n            lojasM: 3040,\r\n            lojasG: 4050\r\n        },\r\n    })\r\n\r\n\r\nconst atualizarDados = (chave, novoValor) => {\r\n    setDates(prevState => ({\r\n      ...prevState,\r\n      [chave]: novoValor\r\n    }));\r\n  };\r\n\r\n    return (\r\n    <GenericDates.Provider value={{ dados, atualizarDados }}>\r\n      {children}\r\n    </GenericDates.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,GAAG,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAGpC,MAAMO,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC;IAC/B,CAAC,EAAE;MACCS,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE;IACZ,CAAC;IACD,CAAC,EAAE;MACCH,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE;IACZ,CAAC;IACD,CAAC,EAAE;MACCH,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE;IACZ;EACJ,CAAC,CAAC;EAGN,MAAMC,cAAc,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;IACzCP,QAAQ,CAACQ,SAAS,KAAK;MACrB,GAAGA,SAAS;MACZ,CAACF,KAAK,GAAGC;IACX,CAAC,CAAC,CAAC;EACL,CAAC;EAEC,oBACAb,OAAA,CAACC,YAAY,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,KAAK;MAAEM;IAAe,CAAE;IAAAR,QAAA,EACrDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAChB,EAAA,CAnCIF,oBAAoB;AAAAmB,EAAA,GAApBnB,oBAAoB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}